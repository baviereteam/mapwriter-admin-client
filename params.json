{"name":"Mapwriter-admin-client","tagline":"An admin client for MapWriter-Server.","body":"### Welcome to MapWriter-Admin-Client.\r\nMapWriter-Admin-Client is a command-line interface used to perform administration tasks on MapWriter-Server. If you don't know what MapWriter-Server is, you should probably start [here](http://baviereteam.github.io/mapwriter-server/).\r\n\r\n### Build\r\nMapWriter-Admin-Client packages as a [Maven AppAssembler](http://mojo.codehaus.org/appassembler/appassembler-maven-plugin/) application. Use the `appassembler:assemble` Maven goal to generate it. \r\nYou will obtain two directories: _bin/_ containing _bootstrap_ scripts to start the application (use _bootstrap_ for Linux and OS X, _bootstrap.bat_ for Windows) and a _repo_, containing the dependencies and JAR files.\r\n\r\n### Use\r\nMapWriter-Admin-Client is powered by a shell script. From the _bin/_ directory, execute the _bootstrap_ script (for Linux or OS X) or _bootstrap.bat_ (for Windows).\r\n\r\nThe application is based upon Spring-Shell. It will output somme classic gibberish and then let you work:\r\n`Welcome to Spring Shell. For assistance press or type \"hint\" then hit ENTER.`\r\n`spring-shell>`\r\n\r\nThis is the main interface. You will type commands here to execute administrative tasks.\r\n\r\n### Commands\r\nAll commands are having a Unix-like structure for parameters, ie. `command --parameterName value`.\r\n\r\nFirst of all, you will want to **connect to a MapWriter-Server** instance:\r\n`spring-shell>connect --host localhost --port 8080`\r\n`Using MapWriter-Server at http://localhost:8080`\r\n_Please note that this does not actually connects you to any server. It does not check the specified server is running or even exists. It just keeps note of the host and port. Eventual connection problems will be found when using the other commands._\r\n\r\nThe Mapwriter-Server you connect to is protected with a Master Key (refer to  to find it). You need to provide this Master Key in order to administrate the Minecraft servers registered in MapWriter-Server.\r\n_Note: You can manage markers without this key as long as you know the server ID and key._\r\n`spring-shell>auth --key THISISTHEVERYLONGKEYYOUGOTFROMTHESERVER`\r\n`Using key THISISTHEVERYLONGKEYYOUGOTFROMTHESERVER`\r\n_Please note that this does not actually checks the key is valid. It just keeps note of it for all requests that will be done._\r\n\r\nYou can then display the list of servers with `server list` or create a new server entry with `server create --name \"The Name Of The Server\"`.\r\n\r\nNot Yet Documented Commands:\r\n* server changekey\r\n* server create\r\n* server delete\r\n* server list\r\n* server rename\r\n* server select\r\n\r\n* marker create\r\n* marker delete\r\n* marker edit\r\n* marker list\r\n* marker select\r\n\r\nFinally, you can use `quit` to exit the application.\r\n\r\n\r\n* generate poifile","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}